---
- name: Install apt-transport-https package
  become: true
  ansible.builtin.apt:
    name: apt-transport-https
    state: present
    lock_timeout: "{{ apt_lock_timeout | default(300) }}"
  changed_when: false

- name: clean up old repositories files
  become: true
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - /etc/apt/sources.list.d/netbird.list
    - /etc/apt/sources.list.d/wiretrustee.list
    - /etc/apt/trusted.gpg.d/wiretrustee.gpg
    - /usr/share/keyrings/netbird-archive-keyring.gpg
    - /usr/share/keyrings/wiretrustee-archive-keyring.gpg

- name: Add repository gpg key
  become: true
  ansible.builtin.get_url:
    url: "https://pkgs.netbird.io/debian/public.key"
    dest: /etc/apt/trusted.gpg.d/netbird.asc
    mode: 0644
    owner: root
    group: root

- name: Add repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb https://pkgs.netbird.io/debian stable main"
    state: present
    filename: netbird
    update_cache: true
    mode: 0644

- name: "install package netbird"
  become: true
  ansible.builtin.apt:
    name: "netbird=0.36.4"
    lock_timeout: "{{ apt_lock_timeout | default(300) }}"
    allow_downgrade: yes
  notify: systemctl restart NetBird

- name: "validate NetBird management URL is provided"
  fail:
    msg: "vault_netbird_management_url variable is required. Please add it to your vault file"
  when:
    - netbird_register is true
    - vault_netbird_management_url is not defined

- name: "validate NetBird access token is provided"
  fail:
    msg: "vault_netbird_access_token variable is required. Please add it to your vault file"
  when:
    - netbird_register is true
    - vault_netbird_access_token is not defined

- name: "create sanitized hostname for NetBird"
  set_fact:
    netbird_sanitized_hostname: "{{ inventory_hostname | regex_replace('\\.', '-') | regex_replace('_', '-') }}"

- name: create Setup Key
  uri:
    url: "{{ vault_netbird_management_url }}/api/setup-keys"
    method: POST
    return_content: yes
    status_code: 200
    body_format: json
    headers:
      Authorization: "Token {{ vault_netbird_access_token }}"
    body:
      name: "Setup Key for {{ netbird_sanitized_hostname }}"
      type: "one-off"
      expires_in: 86400
      usage_limit: 1
      auto_groups: "{{ netbird_auto_groups_ids.split(',') }}"
  register: setup_key_data
  when:
    - netbird_register is true
    - vault_netbird_access_token is defined
  ignore_errors: true

- name: register NetBird peer
  shell:
    cmd: "netbird up --setup-key {{ setup_key_data.json.key }}  --management-url {{ vault_netbird_management_url }} --hostname {{ netbird_sanitized_hostname }} netbird up"
  when:
    - netbird_register is true
    - vault_netbird_management_url is defined
    - setup_key_data is defined
    - setup_key_data.json is defined
  ignore_errors: true

- name: get NetBird peers
  uri:
    url: "{{ vault_netbird_management_url }}/api/peers"
    method: GET
    return_content: yes
    status_code: 200
    body_format: json
    headers:
      Authorization: "Token {{ vault_netbird_access_token }}"
  register: netbird_peers
  ignore_errors: true

- name: register NetBird peer id
  set_fact:
   netbird_peer_id: "{{ netbird_peers.json | community.general.json_query(query) }}"
  vars:
    query: "[?name=='{{ netbird_sanitized_hostname }}'].id"
  when: netbird_register is true
  ignore_errors: true
